<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【BUAA】离散数学python挑战题的一种解决方案</title>
      <link href="/2023/07/14/%E3%80%90BUAA%E3%80%91%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6python%E6%8C%91%E6%88%98%E9%A2%98%E7%9A%84%E4%B8%80%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2023/07/14/%E3%80%90BUAA%E3%80%91%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6python%E6%8C%91%E6%88%98%E9%A2%98%E7%9A%84%E4%B8%80%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>离散数学是计算机科学与技术、软件工程等专业非常重要的课程之一。由于本校大多数学生没有在大一接触过python，同学们参与python挑战题不太积极，但不妨来了解一下做题思路吧！限于笔者的个人能力，我目前只能实现利用真值表形式判断两个公式是否等价。如果你会等值演算的方法，欢迎与我联系，我十分想学习其余的方法。</p><span id="more"></span><h3 id="题目：通过Python语言，共三个函数（第三方库只允许使用numpy），编程实现："><a href="#题目：通过Python语言，共三个函数（第三方库只允许使用numpy），编程实现：" class="headerlink" title="题目：通过Python语言，共三个函数（第三方库只允许使用numpy），编程实现："></a>题目：通过Python语言，共三个函数（第三方库只允许使用numpy），编程实现：</h3><h4 id="（1）生成尽可能多的符合条件的合式公式，联结词集合-¬-∧-∨-→-↔-⨁-变元数量为m，公式复杂度为n；"><a href="#（1）生成尽可能多的符合条件的合式公式，联结词集合-¬-∧-∨-→-↔-⨁-变元数量为m，公式复杂度为n；" class="headerlink" title="（1）生成尽可能多的符合条件的合式公式，联结词集合{¬, ∧ , ∨ , → , ↔ , ⨁}变元数量为m，公式复杂度为n；"></a>（1）生成尽可能多的符合条件的合式公式，联结词集合{¬, ∧ , ∨ , → , ↔ , ⨁}变元数量为m，公式复杂度为n；</h4><h5 id="我们首先回顾一下命题逻辑合式公式及其复杂度的定义"><a href="#我们首先回顾一下命题逻辑合式公式及其复杂度的定义" class="headerlink" title="我们首先回顾一下命题逻辑合式公式及其复杂度的定义:"></a>我们首先回顾一下命题逻辑合式公式及其复杂度的定义:</h5><p><img src="https://s2.loli.net/2023/07/14/HLa9hbZorAOxgtY.jpg" alt="a52fb1f43e8b254629cfdbfd0365319.jpg"><br><img src="https://s2.loli.net/2023/07/14/SN9vcHpYbBDudWw.jpg" alt="31ede1e70c24cb7d86399c64bc31469.jpg"></p><h5 id="来吧，上代码"><a href="#来吧，上代码" class="headerlink" title="来吧，上代码!!!"></a>来吧，上代码!!!</h5><p>细节已经标注在注释上了，若仍有问题请留言。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成max_num个合式公式（尽可能多），返回在列表之中</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Produce</span>(<span class="params">m, n, max_num = <span class="number">100</span></span>):<span class="comment">#python的特殊写法：第三个参数max_num默认为100，也可以不传参</span></span><br><span class="line">    formula = []<span class="comment">#公式列表</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(max_num):</span><br><span class="line">        f = generate_formula(m, n)</span><br><span class="line">        <span class="keyword">if</span> f <span class="keyword">not</span> <span class="keyword">in</span> formula:</span><br><span class="line">            formula.append(f)<span class="comment">#在列表尾加入合式公式</span></span><br><span class="line">    <span class="keyword">return</span> formula<span class="comment">#返回公式列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_formula</span>(<span class="params">m, n, variables=<span class="literal">None</span></span>):</span><br><span class="line">    <span class="keyword">if</span> variables <span class="keyword">is</span> <span class="literal">None</span>: <span class="comment">#存储已经使用过的变元</span></span><br><span class="line">        variables = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:<span class="comment">#如果需要生成的合式公式复杂度为0</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">len</span>(variables) == m):<span class="comment">#选取已存在的变元</span></span><br><span class="line">            var = random.choice(variables)</span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#选取一个未选择的大写字母作为变元</span></span><br><span class="line">            var = random.choice(string.ascii_uppercase[:m])</span><br><span class="line">            <span class="keyword">while</span> var <span class="keyword">in</span> variables:</span><br><span class="line">                var = random.choice(string.ascii_uppercase[:m])</span><br><span class="line">            variables.append(var)</span><br><span class="line">        <span class="keyword">return</span> var<span class="comment">#命题变元是复杂度为0的合式公式</span></span><br><span class="line">    <span class="keyword">else</span>:<span class="comment">#如果需要生成的合式公式复杂度不为0</span></span><br><span class="line">        operator = random.choice([<span class="string">&#x27;¬&#x27;</span>, <span class="string">&#x27;∧&#x27;</span>, <span class="string">&#x27;∨&#x27;</span>, <span class="string">&#x27;→&#x27;</span>, <span class="string">&#x27;↔&#x27;</span>, <span class="string">&#x27;⨁&#x27;</span>])<span class="comment">#随机选择一个联结词</span></span><br><span class="line">        <span class="keyword">if</span> operator == <span class="string">&#x27;¬&#x27;</span>:<span class="comment">#联结词是非的情况</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;¬<span class="subst">&#123;generate_formula(m, n-<span class="number">1</span>, variables)&#125;</span>&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#联结词不是非的情况</span></span><br><span class="line">            <span class="keyword">if</span> n == <span class="number">1</span>:<span class="comment">#n为1的情况下，左侧右侧的合式公式复杂度一定为0</span></span><br><span class="line">                left_formula = generate_formula(m, n-<span class="number">1</span>, variables)</span><br><span class="line">                right_formula = generate_formula(m, n-<span class="number">1</span>, variables)</span><br><span class="line">            <span class="keyword">else</span>:<span class="comment">#n大于1时，左侧右侧合式公式复杂度至少有一个为n-1</span></span><br><span class="line">                <span class="keyword">if</span> random.randint(<span class="number">1</span>, <span class="number">2</span>) == <span class="number">1</span>:</span><br><span class="line">                    left_formula = generate_formula(m, n-<span class="number">1</span>, variables)</span><br><span class="line">                    right_formula = generate_formula(m, random.randint(<span class="number">0</span>, n-<span class="number">1</span>), variables)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    right_formula = generate_formula(m, n-<span class="number">1</span>, variables)</span><br><span class="line">                    left_formula = generate_formula(m, random.randint(<span class="number">0</span>, n-<span class="number">1</span>), variables)</span><br><span class="line">            <span class="keyword">return</span> <span class="string">f&#x27;(<span class="subst">&#123;left_formula&#125;</span> <span class="subst">&#123;operator&#125;</span> <span class="subst">&#123;right_formula&#125;</span>)&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="（2）判断生成的公式是不是永真式，永假式，可满足式；"><a href="#（2）判断生成的公式是不是永真式，永假式，可满足式；" class="headerlink" title="（2）判断生成的公式是不是永真式，永假式，可满足式；"></a>（2）判断生成的公式是不是永真式，永假式，可满足式；</h4><h5 id="本题使用真值表方法判断生成的合式公式为哪种类别，因为题解要利用python中的eval函数，即把字符串转变为表达式并求值，因此让我们回顾一下不同的联结词在python中的语义。"><a href="#本题使用真值表方法判断生成的合式公式为哪种类别，因为题解要利用python中的eval函数，即把字符串转变为表达式并求值，因此让我们回顾一下不同的联结词在python中的语义。" class="headerlink" title="本题使用真值表方法判断生成的合式公式为哪种类别，因为题解要利用python中的eval函数，即把字符串转变为表达式并求值，因此让我们回顾一下不同的联结词在python中的语义。"></a>本题使用真值表方法判断生成的合式公式为哪种类别，因为题解要利用python中的eval函数，即把字符串转变为表达式并求值，因此让我们回顾一下不同的联结词在python中的语义。</h5><p><img src="https://s2.loli.net/2023/07/14/qkcTEfp82wPMIWQ.jpg" alt="30033cbf21d7604f907455a568509e2.jpg"></p><h5 id="辅助函数"><a href="#辅助函数" class="headerlink" title="辅助函数"></a>辅助函数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 辅助函数：解析公式，可以参考上面的图</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">parse_formula</span>(<span class="params">formula</span>):</span><br><span class="line">    formula = formula.replace(<span class="string">&#x27;¬&#x27;</span>, <span class="string">&#x27;1 ^&#x27;</span>).replace(<span class="string">&#x27;∧&#x27;</span>, <span class="string">&#x27; &amp; &#x27;</span>).replace(<span class="string">&#x27;∨&#x27;</span>, <span class="string">&#x27; | &#x27;</span>)</span><br><span class="line">    formula = formula.replace(<span class="string">&#x27;→&#x27;</span>, <span class="string">&#x27; &lt;= &#x27;</span>).replace(<span class="string">&#x27;↔&#x27;</span>, <span class="string">&#x27; == &#x27;</span>).replace(<span class="string">&#x27;⨁&#x27;</span>, <span class="string">&#x27; ^ &#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> formula</span><br><span class="line"></span><br><span class="line"><span class="comment"># 辅助函数：提取变量</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_variables</span>(<span class="params">formula</span>):</span><br><span class="line">    variables = <span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> formula:</span><br><span class="line">        <span class="keyword">if</span> char.isalpha():</span><br><span class="line">            variables.add(char)</span><br><span class="line">    <span class="keyword">return</span> variables</span><br><span class="line"></span><br><span class="line"><span class="comment"># 辅助函数：生成真值表 </span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_truth_table</span>(<span class="params">formula</span>):</span><br><span class="line">    variables = extract_variables(formula)</span><br><span class="line">    num_vars = <span class="built_in">len</span>(variables)</span><br><span class="line">    truth_table = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span> ** num_vars):</span><br><span class="line">        row = []</span><br><span class="line">        <span class="keyword">for</span> j, variable <span class="keyword">in</span> <span class="built_in">enumerate</span>(variables):</span><br><span class="line">            value = (i &gt;&gt; (num_vars - j - <span class="number">1</span>)) &amp; <span class="number">1</span><span class="comment">#这里利用了一点位运算，借助二进制数的特点选定了不同的值</span></span><br><span class="line">            row.append((variable, value))</span><br><span class="line">        truth_table.append(row)</span><br><span class="line">    <span class="keyword">return</span> truth_table</span><br></pre></td></tr></table></figure><h5 id="TrueOrNot的函数"><a href="#TrueOrNot的函数" class="headerlink" title="TrueOrNot的函数"></a>TrueOrNot的函数</h5><p>细节已经标注在注释上了，若仍有问题请留言。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第二个函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">TrueOrNot</span>(<span class="params">formula</span>):</span><br><span class="line">    truth_table = generate_truth_table(formula)</span><br><span class="line">    is_tautology = <span class="literal">True</span> <span class="comment">#永真的</span></span><br><span class="line">    is_contradiction = <span class="literal">True</span> <span class="comment">#永假的</span></span><br><span class="line">    is_satisfiable = <span class="literal">False</span> <span class="comment">#可满足的</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> truth_table:</span><br><span class="line">        result = evaluate_expression(parse_formula(formula), row)<span class="comment">#求每种可能的值</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> result:<span class="comment">#一个为假就不是永真</span></span><br><span class="line">            is_tautology = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#一个为真就不是永假</span></span><br><span class="line">            is_contradiction = <span class="literal">False</span></span><br><span class="line">            is_satisfiable = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> is_tautology <span class="keyword">and</span> <span class="keyword">not</span> is_contradiction:<span class="comment">#不是永真且不是永假直接结束</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> is_tautology:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">elif</span> is_contradiction:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> is_satisfiable:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="（3）判断生成的两个公式否是逻辑等价"><a href="#（3）判断生成的两个公式否是逻辑等价" class="headerlink" title="（3）判断生成的两个公式否是逻辑等价"></a>（3）判断生成的两个公式否是逻辑等价</h4><p>如同简介里描述的一样，笔者不会利用等值演算的方法，因此在这里只分享真值表方法。在理解完第（2）题后，大家应该也觉得第（3）题看起来没那么困难了吧！让我们利用第（2）题定义的辅助函数完成第三题吧。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第三个函数 真值表实现</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">EqualOrNot</span>(<span class="params">formula1, formula2</span>):</span><br><span class="line">    variables1 = extract_variables(formula1)</span><br><span class="line">    variables2 = extract_variables(formula2)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(variables1) != <span class="built_in">len</span>(variables2):<span class="comment">#变量数目不一样的公式一定不等价</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:<span class="comment">#变量种类不同的公式一定不等价</span></span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> variables1:</span><br><span class="line">            <span class="keyword">if</span> v <span class="keyword">not</span> <span class="keyword">in</span> variables2:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    truth_table = generate_truth_table(formula1)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> truth_table:</span><br><span class="line">        result1 = evaluate_expression(parse_formula(formula1), row)</span><br><span class="line">        result2 = evaluate_expression(parse_formula(formula2), row)</span><br><span class="line">        <span class="keyword">if</span> result1 != result2:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="效果检测"><a href="#效果检测" class="headerlink" title="效果检测"></a>效果检测</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">fs = Produce(<span class="number">4</span>, <span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> fs:</span><br><span class="line">    <span class="built_in">print</span>(elem)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(fs))</span><br><span class="line">formula = generate_formula(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(formula)</span><br><span class="line">result = TrueOrNot(formula)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;公式&#x27;<span class="subst">&#123;formula&#125;</span>&#x27;是<span class="subst">&#123;result&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(EqualOrNot(<span class="string">&quot;P→Q&quot;</span>, <span class="string">&quot;¬P∨Q&quot;</span>))</span><br></pre></td></tr></table></figure><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">((A ↔ (B → B)) ↔ (((C ⨁ B) ∨ D) → (A ⨁ B)))</span><br><span class="line">((¬B ↔ ((A ⨁ D) ↔ C)) ⨁ A)</span><br><span class="line">((B ∧ D) ⨁ (C ∧ ¬¬A))</span><br><span class="line">¬(¬(C ∧ D) ∨ (¬A → B))</span><br><span class="line">((¬A ↔ ((C ∨ C) ∧ (C ↔ A))) ⨁ ((D ↔ (C → B)) ∧ ((D ∨ D) ∧ (A ↔ A))))</span><br><span class="line">(¬(C ∨ (B ∧ D)) → (((B ∨ D) ↔ (C ↔ B)) ⨁ (¬A ↔ (B ⨁ A))))</span><br><span class="line">(¬¬(B ⨁ B) ∧ ¬((D → A) ↔ C))</span><br><span class="line">(¬¬(C ∨ B) ↔ (¬B ∨ (¬D → A)))</span><br><span class="line">(((D ∧ A) → ((C ⨁ B) ⨁ A)) ↔ ((B ↔ A) → C))</span><br><span class="line">((C → (D → B)) → (((C ↔ C) ⨁ B) → ((A ⨁ D) ↔ ¬B)))</span><br><span class="line">((((D → C) ∨ (B ∧ C)) ⨁ ((C ∨ A) ∨ (C ↔ C))) → ¬(A → (C ∧ D)))</span><br><span class="line">(C ↔ (¬¬A ⨁ (B ↔ D)))</span><br><span class="line">(((D ⨁ ¬A) ↔ B) ∨ ((C ⨁ D) → B))</span><br><span class="line">(D ⨁ ((D ∨ ¬C) ⨁ (A ↔ B)))</span><br><span class="line">(((A ∨ B) → D) ∧ ¬((C ∧ A) → (B → D)))</span><br><span class="line">((((B → A) ∨ (C ↔ D)) ⨁ C) → B)</span><br><span class="line">((((A ↔ B) ∧ (D ∧ C)) ∨ ((A → A) ∨ B)) ∨ (C ⨁ A))</span><br><span class="line">(((C ↔ (A ∧ B)) ∧ D) ↔ (C → C))</span><br><span class="line">((C ↔ D) ⨁ (D → ((A → C) ⨁ B)))</span><br><span class="line">(((B ∧ (A ∧ B)) → ((D ∨ B) ∨ (C → A))) ⨁ (((D ↔ B) → ¬B) ⨁ C))</span><br><span class="line">((B → (D ∨ C)) ↔ (((C ∧ D) ∧ (B → A)) ⨁ A))</span><br><span class="line">¬(¬¬B ∨ C)</span><br><span class="line">(¬(B ∨ ¬C) ↔ A)</span><br><span class="line">((((C → A) → B) ↔ D) → (A ⨁ (D ↔ ¬A)))</span><br><span class="line">((¬A ∨ C) ∧ (B ↔ (D → (A ↔ C))))</span><br><span class="line">¬((C → D) ∧ ¬(B ∨ A))</span><br><span class="line">((D ∧ C) ⨁ (C ∨ ((D ∧ B) ∨ ¬A)))</span><br><span class="line">(D ↔ (A ⨁ ((C ∨ D) ∧ B)))</span><br><span class="line">((((C → B) ↔ ¬D) ∨ A) ↔ C)</span><br><span class="line">((A ⨁ (¬D ↔ (C ∨ B))) → (((C ∧ D) ↔ A) ∨ ((D ∨ D) ∨ (B ∧ D))))</span><br><span class="line">¬((B ∨ B) ∧ ((A ↔ B) ∨ (C ↔ D)))</span><br><span class="line">(((A → B) ∨ ¬C) → ¬(C ∧ ¬D))</span><br><span class="line">¬(¬(B ⨁ A) ∨ ((C → D) → D))</span><br><span class="line">((D ∨ (B → D)) ∧ (((A ⨁ D) ↔ B) ∧ (C ⨁ B)))</span><br><span class="line">((((A ∨ D) ↔ B) → (C ∨ B)) → (A → D))</span><br><span class="line">((D ∨ B) ↔ (((C ∨ B) ⨁ A) ⨁ ((D ∨ D) ∧ A)))</span><br><span class="line">(D → (((D → A) → (C ∧ B)) ∨ (A ∨ C)))</span><br><span class="line">(¬(B ∧ (A ∨ D)) ↔ (C → C))</span><br><span class="line">(¬¬A → ¬((C ∨ D) ↔ B))</span><br><span class="line">((¬(A ∧ C) ∨ ((D ∨ B) ↔ C)) ∧ ((B ∧ ¬A) ⨁ ¬C))</span><br><span class="line">((C ∨ D) → ((A ↔ (A ∨ C)) ↔ ((D ∨ C) ∧ B)))</span><br><span class="line">(((C ∧ (D ∧ A)) → ((A ↔ B) ⨁ (C → D))) → (D → (C ↔ D)))</span><br><span class="line">¬(D ∨ (¬A ∨ (C ↔ B)))</span><br><span class="line">((((A ∧ B) → C) ↔ ¬(D ∨ C)) ↔ B)</span><br><span class="line">((((C ↔ B) ∧ A) ↔ ¬(D → A)) ∧ (D ↔ (B → D)))</span><br><span class="line">¬((D ∨ D) ∧ (C ⨁ (A ↔ B)))</span><br><span class="line">(¬A ⨁ (((A ⨁ D) ∨ C) → B))</span><br><span class="line">((D ∧ (¬A → B)) ↔ ((¬A → C) ∧ ((A ∧ D) ∨ (C ↔ B))))</span><br><span class="line">¬(¬(D ↔ C) ∧ (A ⨁ B))</span><br><span class="line">((B ∧ A) ∨ ((¬C ∨ B) ↔ (C ⨁ (A ⨁ D))))</span><br><span class="line">((D ∧ C) ∧ (¬(B ↔ A) ↔ (C ↔ D)))</span><br><span class="line">¬(¬(C ⨁ B) ⨁ (C ⨁ (D ∨ A)))</span><br><span class="line">¬(((A → B) → C) ⨁ D)</span><br><span class="line">((((C ↔ B) ∧ ¬A) ⨁ A) ∧ (((B → A) ↔ (A ∨ A)) ⨁ ((C ↔ D) ↔ B)))</span><br><span class="line">(((C ⨁ A) ∧ (¬B ∨ (D ⨁ A))) → ((B → D) ⨁ (B ∨ A)))</span><br><span class="line">(((A ↔ (C ⨁ B)) ⨁ D) ⨁ B)</span><br><span class="line">(D ∨ ¬(A ∧ (B ∧ C)))</span><br><span class="line">¬(B ↔ ¬(A ∨ C))</span><br><span class="line">¬¬((C ∧ B) → D)</span><br><span class="line">((C ∨ (¬A ∨ (B ⨁ D))) → D)</span><br><span class="line">((C → D) ↔ ((¬C ∧ (D ∧ A)) → ¬(B ⨁ D)))</span><br><span class="line">¬(((D ∧ C) ↔ ¬B) ↔ (A ∧ (A → A)))</span><br><span class="line">(A → (((D ∧ A) ∨ (C ∨ B)) ⨁ (¬D ↔ (D ∨ B))))</span><br><span class="line">(((B ⨁ C) ∧ (A ∨ C)) ∨ (((A ↔ B) ∨ (B ∨ A)) → (C ∧ ¬D)))</span><br><span class="line">((A ∧ B) ∧ (¬(B → D) ∨ (C → A)))</span><br><span class="line">((((D ∧ A) ∧ (C ∧ B)) ∧ D) ↔ A)</span><br><span class="line">((A ∨ (B ⨁ (C ∨ B))) ↔ (((C ↔ D) ↔ (A ⨁ B)) ↔ ¬C))</span><br><span class="line">(¬(D ↔ C) ↔ ¬((C → D) ⨁ (A ⨁ B)))</span><br><span class="line">((((D ∨ A) ∧ C) ∨ ¬(B → D)) ∧ D)</span><br><span class="line">((¬A ∨ ((B ∨ C) ↔ (A ⨁ D))) ↔ B)</span><br><span class="line">((((C ∨ B) ↔ (A → D)) → (B → B)) → C)</span><br><span class="line">(¬(B ∧ (C ↔ A)) → D)</span><br><span class="line">(((D ∨ A) → C) → (((C → A) → ¬D) ↔ B))</span><br><span class="line">(((C → B) ∨ D) ∨ ¬¬(D ↔ A))</span><br><span class="line">¬¬((D ↔ A) ↔ (B ↔ C))</span><br><span class="line">(((A → ¬D) → ((A ↔ B) → (C ∧ D))) ↔ (C ⨁ B))</span><br><span class="line">(¬D ⨁ ((C ∨ A) → ((D ⨁ A) → (B → C))))</span><br><span class="line">(((C ⨁ A) → (B ↔ (A ∨ D))) ↔ (A → B))</span><br><span class="line">((C ∨ A) → ¬(¬D ∨ ¬B))</span><br><span class="line">((¬B ⨁ (C ↔ (D → A))) → A)</span><br><span class="line">((A → (C → ¬D)) ⨁ (B ↔ D))</span><br><span class="line">(((A → A) → ¬C) ↔ ((D → (A ∨ B)) → (C ⨁ A)))</span><br><span class="line">((¬A ∨ (¬D → C)) ↔ ((B ⨁ D) ⨁ (D ↔ D)))</span><br><span class="line">((((B → A) ↔ (D ∨ B)) → D) → (((B ⨁ D) ∨ C) ∧ ((A ∨ B) → D)))</span><br><span class="line">(¬B → (((B ∨ D) → (A ⨁ C)) ∧ (C ∧ B)))</span><br><span class="line">((D ↔ (¬C ∧ B)) ↔ (A ∨ A))</span><br><span class="line">(((¬C ∨ B) ∧ (A ↔ D)) ↔ (((B ∨ C) ⨁ (A ∨ D)) ↔ (B ⨁ C)))</span><br><span class="line">((((B ⨁ A) ∧ (D ∨ C)) ∧ D) ∨ C)</span><br><span class="line">(C ∧ ((¬B → C) ∨ ((A → D) ⨁ (D ↔ C))))</span><br><span class="line">(((C ∧ B) ↔ D) ∨ ((¬B ⨁ A) ∨ D))</span><br><span class="line">((((B ⨁ D) ∧ (A → C)) ↔ (B ↔ C)) ∨ ¬D)</span><br><span class="line">(C ∧ (((A ⨁ C) ↔ (B ⨁ C)) ∨ ((B ∧ C) ∧ D)))</span><br><span class="line">((((B ⨁ B) ∨ D) ↔ ((C ∧ B) ⨁ (D → A))) → ((A ⨁ B) ↔ C))</span><br><span class="line">(¬((A → C) ∨ (B ∨ D)) ∨ (A ∨ (C ⨁ (B ∧ A))))</span><br><span class="line">(((C → B) → ((B ⨁ C) ↔ (A ↔ D))) ∨ B)</span><br><span class="line">(((A ↔ (A ∧ C)) ⨁ ((D ∨ C) ∧ B)) ∧ (¬(A → A) ⨁ ((A ∨ D) ⨁ (B → B))))</span><br><span class="line">((D ↔ B) ⨁ ¬((A ↔ C) ∧ ¬B))</span><br><span class="line">(((A ⨁ B) ∧ B) ∨ ((D ∨ (C ∧ A)) ∨ ((D ↔ D) ↔ (B ⨁ C))))</span><br><span class="line">¬(C ⨁ ¬(A → B))</span><br><span class="line">((¬(D ∨ C) ⨁ ((B ⨁ A) ∨ C)) ∧ ((D ⨁ B) ↔ (D ∨ B)))</span><br><span class="line">100</span><br><span class="line">((¬B → (A ∨ C)) ∨ C)</span><br><span class="line">公式&#x27;((¬B → (A ∨ C)) ∨ C)&#x27;是2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> BUAA </tag>
            
            <tag> 离散数学 </tag>
            
            <tag> python </tag>
            
            <tag> 合式公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【CUC】计算思维概论-大作业</title>
      <link href="/2023/06/28/%E3%80%90CUC%E3%80%91%E8%AE%A1%E7%AE%97%E6%80%9D%E7%BB%B4%E6%A6%82%E8%AE%BA-%E5%A4%A7%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/06/28/%E3%80%90CUC%E3%80%91%E8%AE%A1%E7%AE%97%E6%80%9D%E7%BB%B4%E6%A6%82%E8%AE%BA-%E5%A4%A7%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<p>中国传媒大学的计算思维概论是新闻学专业的同学们需要学习的一门课程，我在协助女朋友完成作业的过程中锻炼到了python的多方面知识，认为这份作业还是有一定的参考价值的，故在此作分享。这份大作业应用了包括网络爬虫、数据分析、tkinter等多方面知识，适合初学者练习使用。但由于本人python编程能力有限，因此对代码无法分析的十分透彻，代码中也许会存在部分错误，请谅解！让我们开始吧！</p><span id="more"></span><h3 id="第一部分：项目简介"><a href="#第一部分：项目简介" class="headerlink" title="第一部分：项目简介"></a>第一部分：项目简介</h3><p>本项目选择<a href="https://www.bilibili.com/v/popular/rank/all">bilibili热门榜</a>作为爬取对象，爬取热门榜前100名的视频名称、bv号、播放量等数据。通过分析数据的平均值、数据与排名的走势来预估视频登上排名榜的先决条件。</p><h3 id="第二部分：代码实现"><a href="#第二部分：代码实现" class="headerlink" title="第二部分：代码实现"></a>第二部分：代码实现</h3><h4 id="需要调用的库"><a href="#需要调用的库" class="headerlink" title="需要调用的库"></a>需要调用的库</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="comment">#用于爬取网页</span></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="comment">#用于爬取网页</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np <span class="comment">#使用pandas、matplotlib需要先导入numpy</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd <span class="comment">#构造dataframe数据格式</span></span><br><span class="line"><span class="keyword">import</span> random <span class="comment">#用于随机选取user_agents</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment">#用于绘制折线图</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> tkinter <span class="comment">#用于实现UI</span></span><br><span class="line"><span class="keyword">from</span> tkinter <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure><h4 id="爬虫部分"><a href="#爬虫部分" class="headerlink" title="爬虫部分"></a>爬虫部分</h4><h5 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&#x27;https://api.bilibili.com/x/web-interface/ranking/v2?rid=0&amp;type=all&#x27;</span></span><br><span class="line">user_agents = [</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:54.0) Gecko/20100101 Firefox/54.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 OPR/45.0.2552.898&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; AS; rv:11.0) like Gecko&#x27;</span></span><br><span class="line">]</span><br><span class="line">headers = &#123;<span class="string">&#x27;User-Agent&#x27;</span>: random.choice(user_agents)&#125;</span><br><span class="line">response = requests.get(url, headers=headers)</span><br><span class="line">soup = BeautifulSoup(response.content, <span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">table = json.loads(soup.text)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>])):</span><br><span class="line">    title = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">    name = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;owner&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    play_num = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;view&#x27;</span>]</span><br><span class="line">    bv = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;bvid&#x27;</span>]</span><br><span class="line">    danmaku = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;danmaku&#x27;</span>]</span><br><span class="line">    reply = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;reply&#x27;</span>]</span><br><span class="line">    like = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;like&#x27;</span>]</span><br><span class="line">    favorite = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;favorite&#x27;</span>]</span><br><span class="line">    coin = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;coin&#x27;</span>]</span><br><span class="line">    share = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;share&#x27;</span>]</span><br></pre></td></tr></table></figure><h5 id="设计思路-amp-存在的问题"><a href="#设计思路-amp-存在的问题" class="headerlink" title="设计思路&amp;存在的问题"></a>设计思路&amp;存在的问题</h5><ul><li>不知道随机选取user_agents是否真的能反爬（估计大概率多余）</li><li>找到数据在table内对应位置的思路：观察上述代码内<a href="https://api.bilibili.com/x/web-interface/ranking/v2?rid=0&type=all">url链接</a>内的规律<br><img src="https://s2.loli.net/2023/06/28/odESOARl1L4Zk3J.png" alt="image.png"><br>上图为url链接内的数据，通过与代码进行比对，我们就可以很简单地看出来是如何收集的数据。<br><strong>注：</strong> 如需打开url链接，建议使用chrome浏览器</li></ul><h4 id="数据分析部分"><a href="#数据分析部分" class="headerlink" title="数据分析部分"></a>数据分析部分</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此部分代码笔者了解不多，但是大家可以轻易仿照代码写出自己需要的代码，故不另作阐述</span></span><br><span class="line">data = []</span><br><span class="line">max_value, min_value, average_value = <span class="number">0</span>, <span class="number">10e9</span>, <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>])):</span><br><span class="line">    title = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;title&#x27;</span>]</span><br><span class="line">    name = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;owner&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    play_num = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;view&#x27;</span>]</span><br><span class="line">    bv = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;bvid&#x27;</span>]</span><br><span class="line">    danmaku = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;danmaku&#x27;</span>]</span><br><span class="line">    reply = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;reply&#x27;</span>]</span><br><span class="line">    like = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;like&#x27;</span>]</span><br><span class="line">    favorite = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;favorite&#x27;</span>]</span><br><span class="line">    coin = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;coin&#x27;</span>]</span><br><span class="line">    share = table[<span class="string">&#x27;data&#x27;</span>][<span class="string">&#x27;list&#x27;</span>][k][<span class="string">&#x27;stat&#x27;</span>][<span class="string">&#x27;share&#x27;</span>]</span><br><span class="line">    data.append([k + <span class="number">1</span>, title, name, play_num, bv, like,  reply, danmaku, favorite, coin, share]) </span><br><span class="line">    <span class="keyword">if</span> play_num &gt; max_value:</span><br><span class="line">        max_value = play_num</span><br><span class="line">    <span class="keyword">if</span> play_num &lt; min_value:</span><br><span class="line">        min_value = play_num</span><br><span class="line">    average_value += play_num</span><br><span class="line">average_value /= <span class="number">100</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;最大播放量:&#x27;</span> + <span class="built_in">str</span>(max_value) + <span class="string">&#x27; 最小播放量:&#x27;</span> + <span class="built_in">str</span>(min_value) + <span class="string">&#x27;平均播放量:&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(average_value)))</span><br><span class="line">df = pd.DataFrame(data, columns=[<span class="string">&#x27;排名&#x27;</span>, <span class="string">&#x27;标题&#x27;</span>, <span class="string">&#x27;作者&#x27;</span>, <span class="string">&#x27;播放量&#x27;</span>,  <span class="string">&#x27;BV号&#x27;</span>, <span class="string">&#x27;点赞数&#x27;</span>, <span class="string">&#x27;回复数&#x27;</span>, <span class="string">&#x27;弹幕数&#x27;</span>, <span class="string">&#x27;收藏数&#x27;</span>, <span class="string">&#x27;投币数&#x27;</span>, <span class="string">&#x27;分享数&#x27;</span>])</span><br><span class="line">df.to_excel(<span class="string">&#x27;bilibili_rank.xlsx&#x27;</span>, index=<span class="literal">False</span>)  <span class="comment"># 放到excel里</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>)</span><br><span class="line">y = df[<span class="string">&quot;播放量&quot;</span>].values</span><br><span class="line">l, = plt.plot(x, y, color=<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">plt.xlim((<span class="number">0</span>, <span class="number">100</span>))</span><br><span class="line">plt.ylim((<span class="number">0</span>, <span class="number">7000000</span>))</span><br><span class="line">plt.xlabel(<span class="string">&quot;rank&quot;</span>, &#123;<span class="string">&quot;size&quot;</span> : <span class="number">23</span>&#125;)</span><br><span class="line">plt.ylabel(<span class="string">&quot;view&quot;</span>, &#123;<span class="string">&quot;size&quot;</span> : <span class="number">23</span>&#125;)</span><br><span class="line">plt.title(<span class="string">&quot;rank&amp;play_num&quot;</span>,fontsize=<span class="number">25</span>)</span><br><span class="line">plt.grid()</span><br><span class="line">plt.legend(handles=[l], labels=[<span class="string">&quot;rank&amp;play_num&quot;</span>], loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.savefig(<span class="string">&quot;rank&amp;play_num.jpg&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="UI部分"><a href="#UI部分" class="headerlink" title="UI部分"></a>UI部分</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#此部分代码笔者了解不多，但是大家可以轻易仿照代码写出自己需要的代码，故不另作阐述</span></span><br><span class="line">window = Tk()</span><br><span class="line">window.title(<span class="string">&quot;网页数据收集...&quot;</span>)</span><br><span class="line">window.geometry(<span class="string">&#x27;800x600+10+10&#x27;</span>)</span><br><span class="line">window.configure(bg=<span class="string">&#x27;HotPink&#x27;</span>)</span><br><span class="line">Label(window, text=<span class="string">&#x27;&#x27;</span>, bg=<span class="string">&#x27;HotPink&#x27;</span>).grid(row=<span class="number">1</span>, column=<span class="number">10</span>)</span><br><span class="line">Label(window, text=<span class="string">&#x27;  ~~ 视频排行榜数据获取 ~~&#x27;</span>, font = (<span class="string">&quot;Arial&quot;</span>, <span class="number">40</span>), bg=<span class="string">&#x27;HotPink&#x27;</span>).grid(row=<span class="number">2</span>, column=<span class="number">4</span>)</span><br><span class="line">Label(window, text=<span class="string">&#x27;&#x27;</span>, bg=<span class="string">&#x27;HotPink&#x27;</span>).grid(row=<span class="number">3</span>, column=<span class="number">10</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">start</span>():</span><br><span class="line">    Label(window, text=<span class="string">&#x27;开始...&#x27;</span>, font = (<span class="string">&quot;Arial&quot;</span>, <span class="number">20</span>), bg=<span class="string">&#x27;HotPink&#x27;</span>).grid(row=<span class="number">10</span>, column=<span class="number">4</span>)</span><br><span class="line">    Label(window, text=<span class="string">&#x27;最大播放量:&#x27;</span> + <span class="built_in">str</span>(max_value) + <span class="string">&#x27; 最小播放量:&#x27;</span> + <span class="built_in">str</span>(min_value) + <span class="string">&#x27;平均播放量:&#x27;</span> + <span class="built_in">str</span>(<span class="built_in">int</span>(average_value)), font = (<span class="string">&quot;Arial&quot;</span>, <span class="number">20</span>), bg=<span class="string">&#x27;HotPink&#x27;</span>).grid(row=<span class="number">12</span>, column=<span class="number">4</span>)</span><br><span class="line">    Label(window, text=<span class="string">&#x27;完成！&#x27;</span>, font = (<span class="string">&quot;Arial&quot;</span>, <span class="number">20</span>), bg=<span class="string">&#x27;HotPink&#x27;</span>).grid(row=<span class="number">13</span>, column=<span class="number">4</span>)</span><br><span class="line">Button(window, text=<span class="string">&#x27;开始数据收集&#x27;</span>, font = (<span class="string">&quot;Arial&quot;</span>, <span class="number">30</span>), width=<span class="number">12</span>, command=start) \</span><br><span class="line">    .grid(row=<span class="number">4</span>, column=<span class="number">4</span>, sticky=E, padx=<span class="number">10</span>, pady=<span class="number">5</span>)</span><br><span class="line">Button(window, text=<span class="string">&#x27;退出&#x27;</span>, font = (<span class="string">&quot;Arial&quot;</span>, <span class="number">30</span>), width=<span class="number">5</span>, command=window.quit) \</span><br><span class="line">    .grid(row=<span class="number">5</span>, column=<span class="number">4</span>, sticky=E, padx=<span class="number">10</span>, pady=<span class="number">5</span>)</span><br><span class="line">window.mainloop()</span><br></pre></td></tr></table></figure><h3 id="第三部分：效果展示"><a href="#第三部分：效果展示" class="headerlink" title="第三部分：效果展示"></a>第三部分：效果展示</h3><p><img src="https://s2.loli.net/2023/06/30/7UZgSsFEa2OVxuN.png" alt="image.png"><br><img src="https://s2.loli.net/2023/06/30/F5zLdXPck1bsr4Z.png" alt="image.png"><br><img src="https://s2.loli.net/2023/06/30/wbitKoeFWhsQSPZ.jpg" alt="rank_play_num.jpg"><br><img src="https://s2.loli.net/2023/06/30/5Vo7ds9HYEaqtBm.png" alt="image.png"></p><h3 id="第四部分：拓展部分"><a href="#第四部分：拓展部分" class="headerlink" title="第四部分：拓展部分"></a>第四部分：拓展部分</h3><ul><li>笔者的代码只做了和<strong>播放量</strong>相关的数据分析，对于弹幕数、评论数也可以参照此方法进行数据分析。</li><li>笔者利用播放量等数据预测是&#x2F;否可以上热门榜显然不太现实，视频的完播率、互动率是更总要的因素。因此，本作业只是用作一次python相关知识的应用，<strong>不保证分析的有效性与正确性</strong>。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> CUC </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 数据可视化 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【BUAA】工科数学分析（2）笔记</title>
      <link href="/2023/06/28/%E3%80%90BUAA%E3%80%91%E5%B7%A5%E7%A7%91%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90%EF%BC%882%EF%BC%89%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/06/28/%E3%80%90BUAA%E3%80%91%E5%B7%A5%E7%A7%91%E6%95%B0%E5%AD%A6%E5%88%86%E6%9E%90%EF%BC%882%EF%BC%89%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>工科数学分析（2）是由北京航空航天大学开设的一门6学分的课程，主要包含级数、多重积分等知识点。由于课程学时较多，这份笔记一共有100+页。笔记内容求全不求细，因此重点难点还需大家自己辨别。笔者的个人能力有限，因此不能完全保证内容正确无误，请谅解！</p><span id="more"></span><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>我的记笔记逻辑为<strong>章节+例题</strong>，笔记中的例题大多都是考试中常考的或者有助于掌握知识点的，不一定都需要掌握，请大家自己斟酌。</p><h3 id="笔记预览"><a href="#笔记预览" class="headerlink" title="笔记预览"></a>笔记预览</h3><p><img src="https://s2.loli.net/2023/06/28/2WzC7pIRuKgM6OY.jpg" alt="ecb71ef2ec339f1f19ef95a4285caf0.jpg"><br><img src="https://s2.loli.net/2023/06/28/AtQwxjWUCgqm4zR.jpg" alt="070e42df140db295d12723da06f7bbb.jpg"></p><h3 id="下载方式"><a href="#下载方式" class="headerlink" title="下载方式"></a>下载方式</h3><div class="link-grid"><div class="link-grid-container"><object class="link-grid-image" data="/images/buaa.jpg"></object><p>工科数学分析（2）笔记</p><p>永久有效</p><a href="https://bhpan.buaa.edu.cn/link/AA5BA2B5FB44634276BAE78B21B79DA34A"></a></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> BUAA </tag>
            
            <tag> 数学分析 </tag>
            
            <tag> 微积分 </tag>
            
            <tag> 级数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【BUAA】基础物理学（信息类）笔记</title>
      <link href="/2023/06/27/BUAA-%E5%9F%BA%E7%A1%80%E7%89%A9%E7%90%86%E5%AD%A6%EF%BC%88%E4%BF%A1%E6%81%AF%E7%B1%BB%EF%BC%89%E7%AC%94%E8%AE%B0/"/>
      <url>/2023/06/27/BUAA-%E5%9F%BA%E7%A1%80%E7%89%A9%E7%90%86%E5%AD%A6%EF%BC%88%E4%BF%A1%E6%81%AF%E7%B1%BB%EF%BC%89%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>基础物理学（信息类）是北京航空航天大学开设的一门4学分的课程。由于该课程学时相对较短，内容相对较多，因此笔记内容也许不够详细。笔者的个人能力有限，因此不能完全保证内容正确无误，请谅解！本博客主要分享三份笔记：力学+相对论部分、电磁学部分、期末复习精炼版本。由于期末复习精炼版本仅包含了笔者认为高中知识未涉及或较为难懂的知识，故不一定适用于所有人，请谨慎选择使用。</p><span id="more"></span><h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>我的记笔记逻辑为<strong>知识点+例题</strong>，笔记中的例题大多都是较为基础且重点的问题，请大家不要忽略。</p><h3 id="力学、相对论部分笔记预览"><a href="#力学、相对论部分笔记预览" class="headerlink" title="力学、相对论部分笔记预览"></a>力学、相对论部分笔记预览</h3><p><img src="https://s2.loli.net/2023/06/27/57oE1sXxwIvJcdP.jpg" alt="771cf47f4c366d413526fb354b78f2c.jpg"><br><img src="https://s2.loli.net/2023/06/27/wECjyfO78N1a5Iu.jpg" alt="4fbd1d39104cb157202ddb7f0d6eb1e.jpg"></p><h3 id="电磁学部分笔记预览"><a href="#电磁学部分笔记预览" class="headerlink" title="电磁学部分笔记预览"></a>电磁学部分笔记预览</h3><p><img src="https://s2.loli.net/2023/06/27/DaUNulWdyovVX1r.jpg" alt="39a99743e472fa915fe5ff1733181da.jpg"><br><img src="https://s2.loli.net/2023/06/27/9Lq38hpVydFKsjY.jpg" alt="f28f3467791f20f00900aa9d43b022c.jpg"></p><h3 id="总复习笔记预览"><a href="#总复习笔记预览" class="headerlink" title="总复习笔记预览"></a>总复习笔记预览</h3><p><img src="https://s2.loli.net/2023/06/27/3aXN9xjFbfM2uip.jpg" alt="8bc34acd8a2a5651b7c6cadfd854b9a.jpg"><br><img src="https://s2.loli.net/2023/06/27/I76WLvjnuKqigCX.jpg" alt="ab040fc94ddaecaf418e209c639d93c.jpg"></p><h3 id="下载方式"><a href="#下载方式" class="headerlink" title="下载方式"></a>下载方式</h3><div class="link-grid"><div class="link-grid-container"><object class="link-grid-image" data="/images/buaa.jpg"></object><p>基础物理学笔记</p><p>永久有效</p><a href="https://bhpan.buaa.edu.cn/link/AA5BA2B5FB44634276BAE78B21B79DA34A"></a></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 大学物理 </tag>
            
            <tag> 力学 </tag>
            
            <tag> 电磁学 </tag>
            
            <tag> 相对论 </tag>
            
            <tag> BUAA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>引言</title>
      <link href="/2023/06/27/My-first-blog/"/>
      <url>/2023/06/27/My-first-blog/</url>
      
        <content type="html"><![CDATA[<p>你好！欢迎来到我的blog网站。这个网站创建于2023年暑期（也是我的大一暑假时间），旨在做一些学习内容的记录、学习材料的分享，也许以后会加入一些生活记录。当然，限于本人能力有限，博客内容可能有误，请各位仔细甄别，若发现错误欢迎与我联系。</p><span id="more"></span><h2 id="Q-amp-A"><a href="#Q-amp-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><h3 id="如何联系到我"><a href="#如何联系到我" class="headerlink" title="如何联系到我?"></a>如何联系到我?</h3><ul><li>微信：im_2ppai</li><li>邮箱：<a href="mailto:&#x32;&#x32;&#x33;&#55;&#51;&#51;&#53;&#52;&#x40;&#98;&#117;&#97;&#x61;&#46;&#x65;&#100;&#117;&#x2e;&#x63;&#x6e;">&#x32;&#x32;&#x33;&#55;&#51;&#51;&#53;&#52;&#x40;&#98;&#117;&#97;&#x61;&#46;&#x65;&#100;&#117;&#x2e;&#x63;&#x6e;</a> </li><li>QQ: 3146280166</li></ul><h3 id="为何取网名为2pi"><a href="#为何取网名为2pi" class="headerlink" title="为何取网名为2pi?"></a>为何取网名为2pi?</h3><p>2pi是一个和我生日相同的数学常数</p><h3 id="欢迎各位在评论区提问，我会不定时地更新Q-amp-A"><a href="#欢迎各位在评论区提问，我会不定时地更新Q-amp-A" class="headerlink" title="欢迎各位在评论区提问，我会不定时地更新Q&amp;A"></a>欢迎各位在评论区提问，我会不定时地更新Q&amp;A</h3><p><img src="https://s2.loli.net/2023/06/27/h9H3P5lBtFrSa1d.jpg" alt="给刚诞生的博客过0岁生日"></p><center>给刚诞生的博客过0岁生日]]></content>
      
      
      
        <tags>
            
            <tag> 介绍 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
